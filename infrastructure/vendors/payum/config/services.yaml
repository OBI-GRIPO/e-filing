# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    router.request_context.host: '%env(PAYUM_SERVER_NAME)%'
    request_listener.http_port: '%env(PAYUM_NGINX_PORT)%'

    vnd_routes:
        - '%payum.capture_path%'
        - '%payum.notify_path%'
        - '%payum.authorize_path%'
        - '%payum.refund_path%'
        - '%payum.cancel_path%'
        - '%payum.payout_path%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    App\Storage\PaymentStorage:
        public: true
        alias: 'yadm.payment.storage'

    App\Storage\PaymentTokenStorage:
        public: true
        alias: 'yadm.payment_token.storage'

    App\Storage\GatewayConfigStorage:
        public: true
        alias: 'yadm.gateway_config.storage'

    App\Action\CapturePaymentAction:
        public: true
        class: App\Action\CapturePaymentAction

    App\Action\AuthorizePaymentAction:
        public: true
        class: App\Action\AuthorizePaymentAction

    App\Action\ExecuteSameRequestWithPaymentDetailsAction:
        public: true
        class: App\Action\ExecuteSameRequestWithPaymentDetailsAction

    App\Action\ObtainMissingDetailsAction:
        public: true
        class: App\Action\ObtainMissingDetailsAction
        arguments:
            - '@form.factory'
            - '%payum.template.obtain_missing_details%'

    App\Action\ObtainMissingDetailsForBe2BillAction:
        public: true
        class: App\Action\ObtainMissingDetailsForBe2BillAction
        arguments:
            - '@form.factory'
            - '%payum.template.obtain_missing_details%'
        tags:
            - { name: payum.action, factory: be2bill_offsite, gateway: be2bill }
            - { name: payum.action, factory: be2bill_direct, gateway: be2bill }

    # extension
    App\Extension\UpdatePaymentStatusExtension:
        public: true
        class: App\Extension\UpdatePaymentStatusExtension

    App\Form\Extension\CreditCardExtension:
        public: true
        class: App\Form\Extension\CreditCardExtension

    api.view.gateway_config_to_json_converter:
        class: App\Api\View\GatewayConfigToJsonConverter

    app.gateway_schema_builder:
        class: App\Schema\GatewaySchemaBuilder
        arguments:
            - '@payum'

    App\JsonDecode: '@app.json_decode'
    app.json_decode:
        class: App\JsonDecode

    Payum\Core\Payum: '@payum'

    App\Schema\PaymentSchemaBuilder: '@app.payment_schema_builder'
    app.payment_schema_builder:
        class: App\Schema\PaymentSchemaBuilder

    app.payment_form_definition_builder:
        class: App\Schema\PaymentFormDefinitionBuilder
        arguments:
            - '@yadm.gateway_config.storage'

    App\Schema\TokenSchemaBuilder: '@app.token_schema_builder'
    app.token_schema_builder:
        class: App\Schema\TokenSchemaBuilder

    App\Api\View\PaymentToJsonConverter: '@api.view.payment_to_json_converter'
    api.view.payment_to_json_converter:
        class: App\Api\View\PaymentToJsonConverter
        arguments:
            - '@payum'

    App\Api\View\TokenToJsonConverter: '@api.view.token_to_json_converter'
    api.view.token_to_json_converter:
        class: App\Api\View\TokenToJsonConverter

    app.gateway_form_definition_builder:
        class: App\Schema\GatewayFormDefinitionBuilder
        arguments:
            - '@payum'

    # converter
    app.reply_to_json_response_converter:
        class: App\Converter\ReplyToJsonResponseConverter

    # controller gateways
    app.api.controller.gateway:
        class: App\Api\Controller\GatewayController
        public: true
        arguments:
            - '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
            - '@yadm.gateway_config.storage'
            - '@api.view.gateway_config_to_json_converter'
            - '@app.gateway_schema_builder'
            - '@app.json_decode'

    # controller schema gateways
    app.schema.controller.gateways:
        class: App\Schema\Controller\GatewaySchemaController
        public: true
        arguments:
            - '@app.gateway_schema_builder'
            - '@app.gateway_form_definition_builder'

    # controller schema payments
    app.schema.controller.payments:
        class: App\Schema\Controller\PaymentSchemaController
        public: true
        arguments:
            - '@app.payment_schema_builder'
            - '@app.payment_form_definition_builder'

    # controller schema tokens
    app.schema.controller.tokens:
        class: App\Schema\Controller\TokenSchemaController
        public: true
        arguments:
            - '@app.token_schema_builder'

    # controller payment
    app.api.controller.payment:
        class: App\Api\Controller\PaymentController
        public: true

    # controller payment
    app.api.controller.token:
        class: App\Api\Controller\TokenController
        public: true

    # event request
    app.subscriber.choose_gateway:
        class: App\EventListener\Request\GatewayChooserListener
        tags:
            - { name: kernel.event_subscriber }

    # event response
    payum.listener.reply_to_http_response:
        class: App\EventListener\Response\ReplyToHttpResponseListener
        arguments:
            - '@payum.converter.reply_to_http_response'
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 128 }

    app.listener.reply_to_http_response:
        class: App\EventListener\Response\VndHeaderListener
        arguments:
            - '@router'
            - '%vnd_routes%'
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    # event response
    app.listener.json_output_exception:
        class: App\EventListener\Exception\JsonOutputExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: -100 }

    # form
    App\Form\Type\ChooseGatewayType: '@app.server.form.type.choose_gateway_type'
    app.server.form.type.choose_gateway_type:
        class: App\Form\Type\ChooseGatewayType
        arguments:
            - '@app.gateway_choices_callback'

    app.gateway_choices_callback:
        class: CLASS_SHOULD_NOT_BE_USED_CREATED_BY_FACTORY
        factory: ['App\Factory\GatewayChoicesCallbackFactory', createCallback]
        arguments:
            - '@service_container'

    app.gateway_choices_array:
        class: CLASS_SHOULD_NOT_BE_USED_CREATED_BY_FACTORY
        factory: ['App\Factory\GatewayChoicesCallbackFactory', createArray]
        arguments:
            - '@service_container'

    Payum\Core\Bridge\Symfony\Form\Type\GatewayChoiceType:
        class: Payum\Core\Bridge\Symfony\Form\Type\GatewayChoiceType
        arguments:
            - '@app.gateway_choices_array'
        tags:
            - { name: form.type }

    app.payum.alphabank.factory:
        class: Payum\Core\Bridge\Symfony\Builder\GatewayFactoryBuilder
        arguments: [Dnna\Payum\AlphaBank\AlphaBankGatewayFactory]
        tags:
            - { name: payum.gateway_factory_builder, factory: alphabank }
